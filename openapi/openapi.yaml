openapi: 3.0.3
info:
  title: Parking system
  description: |-
    Parking system endpoint documentation specification.
  version: 0.0.1
servers:
  - url: http://localhost:8080
tags:
  - name: employee
paths:
  /register:
    post:
      tags:
        - employee
      operationId: createEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCreate'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /login:
    post:
      tags:
        - employee
      operationId: loginEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeLogin'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Login not successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    EmployeeCreate:
      allOf:
        - $ref: '#/components/schemas/EmployeeLogin'
      type: object
      required:
        - name
        - surname
        - phoneNumber
        - personalId
        - licencePlateNumber
      properties:
        name:
          type: string
          example: Bob
        surname:
          type: string
          example: Bombers
        phoneNumber:
          type: string
          pattern: '^\+\d{12}$'
          example: "+421901234567"
        personalId:
          type: integer
          format: int32
        licencePlateNumber:
          type: string
          example: "KE223JK"
    EmployeeResponse:
      type: object
      required:
        - id
        - email
        - licencePlateNumber
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        licencePlateNumber:
          type: string
    EmployeeLogin:
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
          pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
          example: "bob@example.com"
        password:
          type: string
          example: "Bob.amazingPa$$"
    ErrorResponse:
      type: object
      properties:
        message:
          type: string